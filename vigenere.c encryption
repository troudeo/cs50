#include <stdio.h>
#include <cs50.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int main(int argc, string argv[])
{
    string plaintext;
    
// only accept one word for key
if (argc != 2)
{
    printf("error, invalid key\n");
    return 1;
}
    // iterate through second argument characters and make sure they are alphabetical, if they are then get plaintext
    
for (int i= 0, n = strlen(argv[1]); i < n; i++ )
if (argv[1][i] <64 || argv[1][i] > 122 || argv[1][i] == 91 || argv[1][i] == 92||argv[1][i] == 93 || argv[1][i] == 94 || argv[1][i] == 95 || argv[1][i]==96)
{
    printf("error, invalid key\n");
    return 1;
}
else 
continue;
//prompt user for message they want to encrypt printf("plaintext:");
printf("plaintext:");
plaintext = get_string();

string cipher;
cipher = plaintext;


int x = strlen(argv[1]);

// set jth letter of key and kth letter of plain text to value zero

  int j=0, k=0;
  
  string key = argv[1];
  
  printf("key:%s\n", key);
  
  int q=0;
  
// generate output section

  printf("ciphertext:");
  
// iterate through kth letter of plaintext and jth letter of key (cycling) and plug into formula to generate encrypted output
 for(int h = strlen(plaintext); k < h && j < x ; k++)
 {
    
     j = (k+q) % x;

 // if the plaintext is a special character/space jth character stays the same and special character/space is printed
if(plaintext[k] <64 || plaintext[k] > 122 || plaintext[k] == 91 || plaintext[k] == 92|| plaintext[k] == 93 || plaintext[k] == 94 || plaintext[k] == 95 || plaintext[k]==96)
{
 
  q--;
     printf("%c", plaintext[k]);
     
     continue;

 }
 if (key[j] >= 'A' && key[j] <='Z' && plaintext[k] >= 'A' && plaintext[k] <= 'Z')
 {
 cipher[k] = ((plaintext[k]-65 + key[j]-65) % 26 + 65);

  
  printf("%c", cipher[k]);
  continue;
  
 }
 if (key[j] >= 'A' && key[j] <='Z' && plaintext[k] >= 'a' && plaintext[k] <= 'z')
 {
      cipher[k] = ((plaintext[k] -97 + key[j]-65) % 26 + 97);
      
      printf("%c", cipher[k]);
  continue;
 }
  if (key[j] >= 'a' && key[j] <='z' && plaintext[k] >= 'a' && plaintext[k] <= 'z')
  {
       cipher[k] = ((plaintext[k] -97 + key[j]-97) % 26 + 97);
      
      printf("%c", cipher[k]);
  continue;
  }
  if (key[j] >= 'a' && key[j] <='z' && plaintext[k] >= 'A' && plaintext[k] <= 'Z')
  {
       cipher[k] = ((plaintext[k] -65 + key[j]-97) % 26 + 65);
      
      printf("%c", cipher[k]);
  continue;
}

 
}
printf("\n");
return 0;
}
